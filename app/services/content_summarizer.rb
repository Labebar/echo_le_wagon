class ContentSummarizer
  def initialize(transcription:)
    # Si transcription est un tableau (comme renvoy√© par SupaData), on reconstruit le texte.
    @transcription = if transcription.is_a?(Array)
                       transcription.map { |seg| seg["text"] }.join(" ")
                     else
                       transcription
                     end

    @client = OpenAI::Client.new(access_token: ENV['OPENAI_API_KEY'])
  end

  def call
    prompt = <<~PROMPT
  Vous √™tes un professeur d‚Äôuniversit√© expert dans le th√®me abord√© dans la transcription ci-dessous. √Ä partir de cette transcription brute, g√©n√©rez un **cours structur√©, d√©taill√© et p√©dagogique** destin√© √† des √©tudiants de niveau master.

  ### üéØ Objectif :
  Produire un support de cours fid√®le et complet √† partir de la transcription, sans ajout d‚Äôinformations ext√©rieures.
  Chaque concept doit √™tre expliqu√© de mani√®re claire, approfondie et p√©dagogique, comme dans un vrai cours.
  Le contenu doit permettre de r√©viser en profondeur et de retrouver facilement toutes les explications et informations abord√©es dans la vid√©o. Il ne doit pas √™tre trop court car c'est l'essentiel du contenu.

  ### üñ•Ô∏è Format de sortie :
  - Langage : **HTML uniquement** (aucun texte en dehors des balises HTML)
  - ne met pas de balise markdown
  - Structure attendue :
    - <h2>Partie I : Titre</h2>
    - <h3><strong> A. Sous-partie</strong> </h3>
    - <h3>Contenu p√©dagogique d√©taill√© et fid√®le √† la transcription, avec exemples si pr√©sents dans la transcription</h3>
    - En fin de document : un glossaire des termes techniques
    - <h2>Glossaire</h2>
    - <ul><li><strong>Terme</strong> : D√©finition courte et claire</li></ul>

  ### üìè Longueur :
  Le r√©sum√© ne doit **pas trop condenser** le contenu. Visez environ **1 ligne de r√©sum√© pour 3 √† 5 lignes** de transcription.
  Exemple : pour une transcription de 300 lignes, le r√©sum√© HTML devrait contenir **60 √† 100 lignes** environ.

  ### üö´ Consignes strictes :
  - Ne mentionnez jamais la vid√©o, son auteur, la plateforme, les blagues, la musique ou l‚Äôintro/outro.
  - Ne faites pas de r√©sum√© global, mais d√©veloppez chaque point abord√© dans la transcription.
  - Ne faites pas de conclusion, le contenu doit √™tre autonome.
  - D√©veloppez toutes les id√©es √©voqu√©es, avec des explications claires, pr√©cises et p√©dagogiques.
  - Aucun avis personnel, aucun commentaire, aucun m√©tadiscours.

  Voici la transcription √† analyser :
      #{@transcription}
    PROMPT

    response = @client.chat(
      parameters: {
        model: "gpt-4o",
        messages: [
          { role: "system", content: "Tu es un assistant qui produit des r√©sum√©s clairs et fid√®les √† la transcription." },
          { role: "user", content: prompt }
        ],
        temperature: 0.7
      }
    )

    response.dig("choices", 0, "message", "content")&.strip
  rescue => e
    Rails.logger.error("Erreur dans ContentSummarizer : #{e.message}")
    nil
  end
end
